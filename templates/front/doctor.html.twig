{% extends 'baseDoctor.html.twig' %}
{% block title %}Doctor{% endblock %}
{% block body %}

<main class="content p-3 flex-grow-1">
<!-- Section Affichage Palanning -->
    <section id="planning" class="planning section">
        <h2>Mon Planning</h2>
        <table class="table123">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Statut</th>
                    <th>Date</th>
                    <th>Adresse</th>
                    <th>R√©ponse</th>
                    <th>Mode</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                {% for planification in planifications %}
                    <tr>
                        <td>{{ planification.id }}</td>
                        <td>{{ planification.statut }}</td>
                        <td>{{ planification.getDate() ? planification.getDate()|date('Y-m-d') : '' }}</td>
                        <td>{{ planification.adresse }}</td>
                        <td>{{ planification.reponse }}</td>
                        <td>{{ planification.mode }}</td>
                        <td>
                            <a href="{{ path('app_planification_edit', {'id': planification.id}) }}">Modifier</a>
                        </td>
                    </tr>
                {% endfor %}
            </tbody>
        </table>
    </section>
<!-- Section Affichage Matching -->
    <section id="matching" class="matching section">
        <h2>Mes Matching</h2>
        <table class="table123">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>CIN</th>
                    <th>Description</th>
                    <th>Date</th>
                    <th>Comp√©tences</th>
                    <th>CV</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                {% for matching in matchings %}
                    <tr>
                        <td>{{ matching.id }}</td>
                        <td>{{ matching.cin }}</td>
                        <td>{{ matching.description }}</td>
                        <td>{{ matching.getDate()|date('Y-m-d') }}</td>

                        <td>{{ matching.competences }}</td>
                        <td>{{ matching.cv }}</td>
                        <td>
                            <a href="{{ path('app_matching_edit', {'id': matching.id}) }}">Modifier</a> 
                        </td>
                    </tr>
                {% endfor %}
            </tbody>
        </table>
    </section>
<!-- Section Affichage Rendez-vous -->
    <section id="appointments" class="appointments section">
        <h1>Rendez-vous du patient</h1>
        {% if rendez_vouses is defined and rendez_vouses is empty %}
            <p>Aucun rendez-vous trouv√© pour ce patient.</p>
        {% else %}
            <table class="table123">
                <thead>
                    <tr>
                        <th>Date</th>
                        <th>Motif</th>
                        <th>Statut</th>
                        <th>Mode</th>
                        <th>Commentaire</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>
                    {% for rendezVous in rendez_vouses %}
                        <tr>
                            <td>{{ rendezVous.dateHeure|date('d-m-Y H:i') }}</td>
                            <td>{{ rendezVous.motif.label }}</td>
                            <td>{{ rendezVous.statut.label }}</td>
                            <td>{{ rendezVous.mode.label }}</td>
                            <td>{{ rendezVous.commantaire }}</td>
                             <td>
                                <a href="{{ path('app_rendez_vous_show', {'id': rendezVous.id}) }}" class="btn btn-info btn-sm">
                                    <i class="bi bi-eye"></i> Voir
                                </a>
                                <a href="{{ path('app_rendez_vous_edit', {'id': rendezVous.id}) }}" class="btn btn-warning btn-sm">
                                    <i class="bi bi-pencil-square"></i> Modifier
                                </a>
                            </td>
                        </tr>
                    {% endfor %}
                </tbody>
            </table>
        {% endif %}
    </section>
<!-- Section Affichage Ordonnances -->
<section id="Ordonnances" class="Ordonnances section">
    <h1>Ordonnances du patient</h1>

    <button id="toggleHistorique">Afficher l'historique</button>
    <div id="historiqueOrdonnances" style="display: none;">
        <ul id="historiqueOrdonnanceList"></ul>
    </div>
<style>/* Style g√©n√©ral pour la liste */
    #historiqueOrdonnanceList {
        list-style-type: none; /* Supprimer les puces */
        padding: 0;
        margin: 20px 0;
        font-family: 'Roboto', sans-serif;
        font-size: 16px;
        color: #333;
    }
    
    /* Style des √©l√©ments de la liste */
    #historiqueOrdonnanceList li {
        background: rgba(255, 255, 255, 0.9); /* Effet semi-transparent */
        padding: 18px;
        margin: 12px 0;
        border-radius: 12px; /* Coins plus arrondis */
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        transition: all 0.3s ease-in-out;
        display: flex;
        align-items: center;
        gap: 12px; /* Espacement entre l'ic√¥ne et le texte */
        position: relative;
        backdrop-filter: blur(6px); /* Effet de flou moderne */
        overflow: hidden;
    }
    
    /* Effet au survol */
    #historiqueOrdonnanceList li:hover {
        background: rgba(240, 240, 240, 0.95);
        transform: translateY(-3px);
        box-shadow: 0 6px 15px rgba(0, 0, 0, 0.15);
    }
    
    /* Ic√¥nes √† gauche de chaque √©l√©ment (optionnel) */
    #historiqueOrdonnanceList li::before {
        content: "üìÑ"; /* Ic√¥ne document */
        font-size: 20px;
    }
    
    /* Style des liens */
    #historiqueOrdonnanceList li a {
        color: #007bff;
        text-decoration: none;
        font-weight: 600;
        transition: color 0.3s ease;
        flex-grow: 1; /* Permet au texte de s‚Äô√©tirer */
    }
    
    /* Effet de survol des liens */
    #historiqueOrdonnanceList li a:hover {
        text-decoration: underline;
        color: #0056b3;
    }
    
    /* Ajout d‚Äôune ligne d√©corative √† gauche */
    #historiqueOrdonnanceList li::after {
        content: "";
        position: absolute;
        left: 0;
        top: 0;
        height: 100%;
        width: 4px;
        background: linear-gradient(45deg, #007bff, #00d4ff);
        transition: width 0.3s ease-in-out;
    }
    
    /* Animation au survol de la ligne */
    #historiqueOrdonnanceList li:hover::after {
        width: 8px;
    }
    
    </style>
    <script>
        document.getElementById('toggleHistorique').addEventListener('click', function() {
            var historiqueSection = document.getElementById('historiqueOrdonnances');
            var historiqueList = document.getElementById('historiqueOrdonnanceList');

            if (historiqueSection.style.display === 'none' || historiqueSection.style.display === '') {
                historiqueSection.style.display = 'block';
                this.textContent = 'Masquer l\'historique';

                fetch('/ordonnance/ordonnance/historique')


                    .then(response => response.json())
                    .then(data => {
                        historiqueList.innerHTML = ''; // Clear previous list
                        if (data.length === 0) {
                            historiqueList.innerHTML = '<li>Aucune ordonnance enregistr√©e.</li>';
                        } else {
                            data.forEach(ordonnance => {
                                let li = document.createElement('li');
                                li.textContent = `Ordonnance #${ordonnance.id} - Date : ${ordonnance.date}`;
                                historiqueList.appendChild(li);
                            });
                        }
                    })
                    .catch(error => console.error('Erreur:', error));
            } else {
                historiqueSection.style.display = 'none';
                this.textContent = 'Afficher l\'historique';
            }
        });
    </script>
</section>
    



    <script>
        document.getElementById("searchInput").addEventListener("keyup", function () {
            let filter = this.value.toLowerCase();
            let rows = document.querySelectorAll("tbody tr");
            rows.forEach(row => {
                row.style.display = row.innerText.toLowerCase().includes(filter) ? "" : "none";
            });
        });
    </script>

    {% if ordonnances is defined and ordonnances is empty %}
        <p>Aucune ordonnance trouv√©e pour ce patient.</p>
    {% else %}
        <table class="table123" id="ordonnanceTable">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Date</th>
                    <th>M√©dicaments</th>
                    <th>Commentaire</th>
                    <th>Dur√©e d'utilisation</th>
                    <th>Quantit√© d'utilisation</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                {% for ordonnance in ordonnances %}
                    <tr>
                        <td><strong>{{ ordonnance.id }}</strong></td>
                        <td>{{ ordonnance.getDate() ? ordonnance.getDate()|date('Y-m-d') : 'N/A' }}</td>
                        <td>{{ ordonnance.medicaments }}</td>
                        <td>{{ ordonnance.commantaire() }}</td>
                        <td>{{ ordonnance.dureeUtilisation }}</td>
                        <td>{{ ordonnance.quantiteUtilisation }}</td>
                        <td>
                            <a href="{{ path('ordonnance_show', {'id': ordonnance.id}) }}" class="btn btn-info btn-sm">
                                <i class="bi bi-eye"></i> Voir
                            </a>    
                            <a href="{{ path('app_ordonnance_edit', {'id': ordonnance.id}) }}" class="btn btn-warning btn-sm">
                                <i class="bi bi-pencil-square"></i> Modifier
                            </a>
                           
                        </td>
                    </tr>
                {% endfor %}
            </tbody>
        </table>
    {% endif %}

    <button id="downloadPdf" class="btn btn-primary mt-3">üìÑ T√©l√©charger PDF</button>
   <!--
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const rows = document.querySelectorAll('#ordonnanceTable tbody tr');
            const currentDate = new Date();
    
            // Flag to check if any ordonnance is older than 3 days
            let showAlert = false;
    
            rows.forEach(function(row) {
                const ordonnanceDateStr = row.getAttribute('data-date');
                if (ordonnanceDateStr) {
                    const ordonnanceDate = new Date(ordonnanceDateStr);
    
                    // Calculer la diff√©rence en jours
                    const daysDifference = (currentDate - ordonnanceDate) / (1000 * 3600 * 24);
                    
                    // V√©rifier si la diff√©rence est sup√©rieure √† 3 jours
                    if (daysDifference > 3) {
                        showAlert = true;
                    }
                }
            });
    
            // Si une ordonnance est plus vieille de 3 jours, afficher l'alerte
            if (showAlert) {
                alert("Il y a des ordonnances qui ont d√©pass√© 3 jours par rapport √† la date actuelle.");
            }
        });
    </script>


</section>
-->


<script>
    document.addEventListener("DOMContentLoaded", function () {
        function checkExpiredOrdonnances() {
            fetch('/ordonnance/check-ordonnance')
                .then(response => response.json())
                .then(data => {
                    if (data.length > 0) {
                        let alertMessage = "Les ordonnances suivantes ont plus de 3 jours et doivent √™tre v√©rifi√©es :\n\n";
    
                        data.forEach(ordonnance => {
                            alertMessage += `Ordonnance ID: ${ordonnance.id} - Date: ${ordonnance.date}\n`;
                        });
    
                        // Demander √† l'utilisateur s'il veut supprimer les ordonnances expir√©es
                        if (confirm(alertMessage + "\nVoulez-vous supprimer ces ordonnances ?")) {
                            deleteExpiredOrdonnances(data.map(ord => ord.id));
                        }
                    } else {
                        console.log('Aucune ordonnance expir√©e.');
                    }
                })
                .catch(error => console.error('Erreur lors de la r√©cup√©ration des ordonnances :', error));
        }
    
        function deleteExpiredOrdonnances(ordonnanceIds) {
            fetch('/ordonnance/ordonnance/delete-expired', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ ids: ordonnanceIds })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert("Ordonnances supprim√©es avec succ√®s !");
                    location.reload(); // Recharger la page apr√®s suppression
                }
            })
            .catch(error => console.error('Erreur lors de la suppression des ordonnances :', error));
        }
    
        checkExpiredOrdonnances();
    });
    
</script>


<!-- Section Affichage Facturations -->
    <section id="Facturations" class="Facturations section">
        <h1 class="fw-bold mb-3">Liste des Facturations üìÑ</h1>
        {% if facturations is defined and facturations is empty %}
            <p>Aucune facturation trouv√©e pour ce patient.</p>
        {% else %}
            <table class="table123 table table-striped table-hover">
                <thead>
                    <tr>
                        <th data-column="0">ID<span class="sort-icon">üîºüîΩ</span></th>
                        <th data-column="1"> Ordonnance <span class="sort-icon">üîºüîΩ</span></th>
                        <th data-column="2">Date <span class="sort-icon">üîºüîΩ</span></th>
                        <th data-column="4">Montant (‚Ç¨)<span class="sort-icon">üîºüîΩ</span></th>
                        <th data-column="5">M√©thode de Paiement <span class="sort-icon">üîºüîΩ</span></th>
                        <th data-column="6"> Statut <span class="sort-icon">üîºüîΩ</span></th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    {% for facturation in facturations %}
                        <tr>
                            <td><strong>{{ facturation.id }}</strong></td>
                            <td>{{ facturation.idOrdonnanceId }}</td>
                            <td>{{ facturation.getDate() ? facturation.getDate()|date('Y-m-d') : 'N/A' }}</td>
                            <td><span class="fw-bold">{{ facturation.montant }}</span></td>
                            <td>{{ facturation.methodePaiement ? facturation.methodePaiement.label : '' }}</td>
                            <td>
                                <span class="badge {% if facturation.statut == 'pay√©' %}bg-success{% else %}bg-warning text-dark{% endif %}">
                                    {{ facturation.statut }}
                                </span>
                            </td>
                            <td>
                                <a href="{{ path('app_facturation_show', {'id': facturation.id}) }}" class="btn btn-info btn-sm">
                                    <i class="bi bi-eye"></i> Voir
                                </a>
                                <a href="{{ path('app_facturation_edit', {'id': facturation.id}) }}" class="btn btn-warning btn-sm">
                                    <i class="bi bi-pencil-square"></i> Modifier
                                </a>
                                <a href="{{ path('app_facturation_toggle_status', {'id': facturation.id}) }}" class="btn btn-success btn-sm">
                                    <i class="bi bi-cash"></i> 
                                    {% if facturation.statut == 'Pay√©e' %}
                                    <button class="btn btn-success btn-sm" disabled style="padding: 3px 8px; font-size: 12px; border-radius: 20px;">
                                        <i class="bi bi-check-circle"></i> Pay√©e
                                    </button>
                                    
                                    
{% else %}
    <a href="{{ path('app_facturation_toggle_status', {'id': facturation.id}) }}" class="btn btn-success btn-sm">
        <i class="bi bi-cash"></i> Marquer comme Pay√©e
    </a>
{% endif %}
{% if facturation.statut == 'Pay√©e' %}
<a href="{{ path('app_facture_download', {'id': facturation.id}) }}" class="btn btn-primary btn-sm" style="padding: 4px 10px; font-size: 12px; border-radius: 20px;">
    <i class="bi bi-download"></i> T√©l√©charger
</a>

{% else %}
    <button class="btn btn-secondary btn-sm" disabled>
        <i class="bi bi-download"></i> Disponible apr√®s paiement
    </button>
{% endif %}

                                </a>
                                

                            </td>
                        </tr>
                    {% endfor %}
                </tbody>
            </table>
        {% endif %}
        
        <!-- Include DataTables & Bootstrap -->
<link rel="stylesheet" href="https://cdn.datatables.net/1.13.6/css/dataTables.bootstrap5.min.css">
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js"></script>
<script src="https://cdn.datatables.net/1.13.6/js/dataTables.bootstrap5.min.js"></script>

<script>
    $(document).ready(function () {
        let table = $('.table123').DataTable({
            "order": [[0, "asc"]], // Default sorting by ID in ascending order
            "columnDefs": [
                { "orderable": false, "targets": 6 } // Disable sorting on 'Actions' column
            ]
        });

        // Update sorting icons dynamically
        $('.table123 thead th').click(function () {
            $('.table123 thead th .sort-icon').text('üîºüîΩ'); // Reset all
            let columnIdx = $(this).index();
            let order = table.order();
            if (order[0][0] === columnIdx) {
                $(this).find('.sort-icon').text(order[0][1] === 'asc' ? 'üîº' : 'üîΩ');
            }
        });
    });
</script>
    </section>
    <!-- Section Ajout Facturation -->
    <section id="AjoutFacturation" class="AjoutFacturation section">
        <h2>Ajouter une Facturation</h2>
        
        {{ form_start(form1, {'attr': {'class': 'row g-3 needs-validation', 'novalidate': 'novalidate'}}) }}

        <div class="form-group">
            {{ form_label(form1.id_ordonnance_id, 'id_ordonnance associer') }}
            {{ form_widget(form1.id_ordonnance_id, {'attr': {'id': 'dateInput', 'class': 'form-control'}}) }}
            {{ form_errors(form1.id_ordonnance_id) }}
        </div>

        <div class="form-group">
            {{ form_label(form1.date, 'Date de la facturation', {'attr': {'for': 'dateInput'}}) }}
            {{ form_widget(form1.date, {'attr': {'class': 'form-control'}}) }}
            {{ form_errors(form1.date) }}
        </div>

        <div class="form-group">
            {{ form_label(form1.montant, 'Montant de la facturation') }}
            {{ form_widget(form1.montant, {'attr': {'class': 'form-control'}}) }}
            {{ form_errors(form1.montant) }}
        </div>

        <div class="form-group">
            {{ form_label(form1.methode_paiement, 'Methode de Paiement') }}
            {{ form_widget(form1.methode_paiement, {'attr': {'class': 'form-control'}}) }}
            {{ form_errors(form1.methode_paiement) }}
        </div>

        <div class="form-group">
            {{ form_label(form1.statut, 'Statut de la facturation') }}
            {{ form_widget(form1.statut, {'attr': {'class': 'form-control'}}) }}
            {{ form_errors(form1.statut) }}
        </div>

        <div class="form-button">
            <button class="btn w-100" style="background-color: #66C0C6; border-color: #66C0C6; color: white; font-weight: bold; padding: 10px 20px; border-radius: 5px;">
                {{ button_label|default('Enregistrer') }}
            </button>
        </div>

        {{ form_end(form1) }}
    </section>
    <!-- Section Ajout Ordonnance -->
    <section  id="AjoutOrdonnance" class="AjoutOrdonnance section">
    <h2>Ajouter une Ordonnance</h2>
        
        {{ form_start(form, {'attr': {'class': 'row g-3 needs-validation', 'novalidate': 'novalidate'}}) }}

        <div class="form-group">
            {{ form_label(form.date, 'Date de l‚Äôordonnance', {'attr': {'for': 'dateInput'}}) }}
            {{ form_widget(form.date, {'attr': {'id': 'dateInput', 'class': 'form-control'}}) }}
            {{ form_errors(form.date) }}
        </div>

        <div class="form-group">
            {{ form_label(form.medicaments, 'M√©dicaments prescrits') }}
            {{ form_widget(form.medicaments, {'attr': {'class': 'form-control'}}) }}
            {{ form_errors(form.medicaments) }}
        </div>

        <div class="form-group">
            {{ form_label(form.duree_utilisation, 'Dur√©e d‚Äôutilisation') }}
            {{ form_widget(form.duree_utilisation, {'attr': {'class': 'form-control'}}) }}
            {{ form_errors(form.duree_utilisation) }}
        </div>

        <div class="form-group">
            {{ form_label(form.quantite_utilisation, 'Quantit√© √† utiliser') }}
            {{ form_widget(form.quantite_utilisation, {'attr': {'class': 'form-control'}}) }}
            {{ form_errors(form.quantite_utilisation) }}
        </div>

        <div class="form-group">
            {{ form_label(form.id_consultation, 'Consultation associ√©e') }}
            {{ form_widget(form.id_consultation, {'attr': {'class': 'form-control'}}) }}
            {{ form_errors(form.id_consultation) }}
        </div>

        <div class="form-group">
            {{ form_label(form.commantaire, 'Commentaire') }}
            {{ form_widget(form.commantaire, {'attr': {'class': 'form-control'}}) }}
            {{ form_errors(form.commantaire) }}
        </div>

        <div class="form-button">
            <button class="btn w-100" style="background-color: #66C0C6; border-color: #66C0C6; color: white; font-weight: bold; padding: 10px 20px; border-radius: 5px;">
                {{ button_label|default('Enregistrer') }}
            </button>
            
        </div>

        {{ form_end(form) }}
        </section>
        <!-- Section Ajout Matching -->
         <section  id="Ajoutmatching" class="Ajoutmatching section">
    <h2>Ajouter un matching</h2>
        
        {{ form_start(form4, {'attr': { 'novalidate': 'novalidate'}}) }}

         <div class="form-group">
            {{ form_label(form4.cin, 'cin') }}
            {{ form_widget(form4.cin, {'attr': {'class': 'form-control'}}) }}
            {{ form_errors(form4.cin) }}
        </div>

        <div class="form-group">
{{ form_label(form4.date, 'Date de l‚Äôordonnance', {'attr': {'for': 'dateInput'}}) }}
            {{ form_widget(form4.date, {'attr': {'id': 'dateInput', 'class': 'form-control'}}) }}
            {{ form_errors(form4.date) }}
        </div>

        <div class="form-group">
            {{ form_label(form4.description, 'Description') }}
            {{ form_widget(form4.description, {'attr': {'class': 'form-control'}}) }}
            {{ form_errors(form4.description) }}
        </div>

        <div class="form-group">
            {{ form_label(form4.competences, 'Competences ') }}
            {{ form_widget(form4.competences, {'attr': {'class': 'form-control'}}) }}
            {{ form_errors(form4.competences) }}
        </div>

        <div class="form-group">
            {{ form_label(form4.cv, 'CV') }}
            {{ form_widget(form4.cv, {'attr': {'class': 'form-control'}}) }}
            {{ form_errors(form4.cv) }}
        </div>

        <div class="form-group">
            {{ form_label(form4.id_freelancer, 'id_freelancer associer') }}
            {{ form_widget(form4.id_freelancer, {'attr': {'class': 'form-control'}}) }}
            {{ form_errors(form4.id_freelancer) }}
        </div>
        <div class="form-group">
            {{ form_label(form4.utilisateur, 'utilisateur associer') }}
            {{ form_widget(form4.utilisateur, {'attr': {'class': 'form-control'}}) }}
            {{ form_errors(form4.utilisateur) }}
        </div>

        <div class="form-button">
            <button class="btn w-100" style="background-color: #66C0C6; border-color: #66C0C6; color: white; font-weight: bold; padding: 10px 20px; border-radius: 5px;">
                {{ button_label|default('Enregistrer') }}
            </button>
        </div>

        {{ form_end(form4) }}
        </section>
        <!-- Section Ajout Consultation -->
        <section  id="AjoutConsultation" class="AjoutConsultation section">
    <h2>Ajouter une consultation</h2>
        
        {{ form_start(form3, {'attr': {'class': 'row g-3 needs-validation', 'novalidate': 'novalidate'}}) }}

        <div class="form-group">
           {{ form_row(form3.prochain_rdv) }}

        </div>

        <div class="form-group">
            {{ form_label(form3.diagnostic, 'Diagnostic') }}
            {{ form_widget(form3.diagnostic, {'attr': {'class': 'form-control'}}) }}
            {{ form_errors(form3.diagnostic) }}
        </div>

        <div class="form-group">
            {{ form_label(form3.traitement, 'Traitement donnee') }}
            {{ form_widget(form3.traitement, {'attr': {'class': 'form-control'}}) }}
            {{ form_errors(form3.traitement) }}
        </div>

        <div class="form-group">
            {{ form_label(form3.observation, 'Observation') }}
            {{ form_widget(form3.observation, {'attr': {'class': 'form-control'}}) }}
            {{ form_errors(form3.observation) }}
        </div>

        <div class="form-group">
            {{ form_label(form3.prix, 'Prix de la consultation') }}
            {{ form_widget(form3.prix, {'attr': {'class': 'form-control'}}) }}
            {{ form_errors(form3.prix) }}
        </div>

        <div class="form-group">
            {{ form_label(form3.duree, 'Duree') }}
            {{ form_widget(form3.duree, {'attr': {'class': 'form-control'}}) }}
            {{ form_errors(form3.duree) }}
        </div>
         <div class="form-group">
            {{ form_label(form3.id_rendez_vous, 'Id rendez vous associer') }}
            {{ form_widget(form3.id_rendez_vous, {'attr': {'class': 'form-control'}}) }}
            {{ form_errors(form3.id_rendez_vous) }}
        </div>

        <div class="form-button">
            <button class="btn w-100" style="background-color: #66C0C6; border-color: #66C0C6; color: white; font-weight: bold; padding: 10px 20px; border-radius: 5px;">
                {{ button_label|default('Enregistrer') }}
            </button>
        </div>

        {{ form_end(form3) }}
        </section>
        <!-- Section Affichage Articles -->
        <section id="articles" class="articles section">
            <div class="container-fluid mt-5">
        <h2 class="mb-4 text-primary fw-bold text-center">Mes Articles</h2>

        <!-- Affichage des articles avec un layout bien r√©parti -->
            <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
                {% for article in articles %}
                    <div class="col">
                        <div class="card shadow-sm border-0 h-100 p-3">
                            <!-- Image bien cadr√©e -->
                            <img src="{{ asset(article.urlimagearticle) }}" class="card-img-top" alt="{{ article.titre }}" style="height: 250px; object-fit: cover; border-radius: 8px;">

                            <div class="card-body">

                <div class="d-flex align-items-center text-muted small me-2"> 
                 <span>{{ article.dateArticle|date('d M. Y') }} ¬∑ 2 min de lecture</span>   <a href="{{ path('article_delete', {'id': article.id}) }}">  <i class="bi bi-trash me-2 text-danger" style="cursor: pointer;" ></i> </a>

                <a href="{{ path('article_edit', {'id': article.id}) }}">  <i class="bi bi-pencil-square" style="cursor: pointer;" ></i> </a>
                </div>
                                <h5 class="card-title fw-bold">{{ article.titre }}</h5>
                                <p class="card-text">{{ article.contenue|slice(0, 100) }}...</p>
                            </div>
                            <!-- Footer avec ic√¥nes -->
                            <div class="card-footer bg-white border-0 d-flex justify-content-between align-items-center">
                                <span class="text-muted"><i class="fas fa-eye"></i> {{ article.nbreVue }}</span>
                                <span class="text-muted"><i class="fas fa-comment-alt"></i>
                                {{ commentaireRepository.countCommentairesByArticle(article.id) }}
                                 </span>
                                <a href="{{ path('article_detail', {'id': article.id}) }}" class="btn btn-outline-primary btn-sm">Lire plus</a>
                            </div>
                        </div>
                    </div>
                {% endfor %}
            </div>
       
    </div>
        </section>
        <!-- Section Affichage Consultation -->
                <section id="Consultation" class="Consultation section">
        <h1>Consultations du patient</h1>
        {% if consultations is defined and consultations is empty %}
            <p>Aucune consultation trouv√©e pour ce patient.</p>
        {% else %}
            <table class="table123">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Date</th>
                        <th>prix</th>
                        <th>observation</th>
                        <th>traitement</th>
                        <th>diagnostic</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    {% for consultation in consultations %}
                        <tr>
                            <td><strong>{{ consultation.id }}</strong></td>
                            <td>{{ consultation.getProchainRdv() ? consultation.getProchainRdv()|date('Y-m-d') : 'N/A' }}</td>
                            <td>{{ consultation.prix }}</td>
                            <td>{{ consultation.observation }}</td>
                            <td>{{ consultation.traitement }}</td>
                            <td>{{ consultation.diagnostic }}</td>
                            <td>
                                <a href="{{ path('app_consultation_show', {'id': consultation.id}) }}" class="btn btn-info btn-sm">
                                    <i class="bi bi-eye"></i> Voir
                                </a>
                                <a href="{{ path('app_consultation_edit', {'id': consultation.id}) }}" class="btn btn-warning btn-sm">
                                    <i class="bi bi-pencil-square"></i> Modifier
                                </a>
                            </td>
                        </tr>
                    {% endfor %}
                </tbody>
            </table>
        {% endif %}
    </section>
    <!-- Ajout d'un article -->
        <section id="equipments" class="equipments section">
        {{ form_start(form2, {'attr': {'enctype': 'multipart/form-data', 'novalidate': 'novalidate'}}) }}
           <div class="mb-3">
                {{ form_label(form2.titre, 'Titre de l\'article', {'label_attr': {'class': 'form-label fw-bold'}}) }}
                {{ form_widget(form2.titre, {'attr': {'class': 'form-control w-100','rows':'6'}}) }}
                 {% if form2.titre.vars.errors is not empty %}
        <div class="text-danger mt-1"> {{ form_errors(form2.titre) }} </div>
        {% endif %}
            </div>

        <div class="mb-3">
                {{ form_label(form2.contenue, 'Contenue de l\'article', {'label_attr': {'class': 'form-label'}}) }}
                {{ form_widget(form2.contenue, {'attr': {'class': 'form-control', 'rows': '4'}}) }}

                {% if form2.contenue.vars.errors is not empty %}
                        <div class="text-danger">{{ form_errors(form2.contenue) }}</div>
                    {% endif %}
            </div>
            <div class="mb-3">
                {{ form_label(form2.urlimagearticle, 'URL de l\'image de l\'article', {'label_attr': {'class': 'form-label'}}) }}
                {{ form_widget(form2.urlimagearticle, {'attr': {'class': 'form-control'}}) }}
               
        <div class="text-danger mt-1">
            {{ form_errors(form2.urlimagearticle) }}
        </div>
            </div>
             <div class="mb-3">
                {{ form_label(form2.nbreVue, 'le nbre de vue de article', {'label_attr': {'class': 'form-label'}}) }}
                {{ form_widget(form2.nbreVue, {'attr': {'class': 'form-control'}}) }}
               
        <div class="text-danger mt-1">
            {{ form_errors(form2.nbreVue) }}
        </div>
            </div>
            <div class="mb-3">
                 <label>Utilisateur</label>
                {{ form_widget(form2.utilisateur) }}
            </div>
            <div class="text-center">
            <button type="submit" class="btn w-100" style="background-color: #66C0C6; border-color: #66C0C6; color: white; font-weight: bold; padding: 10px 20px; border-radius: 5px;">
                Enregistrer
            </button>
            </div>
            {{ form_end(form2) }}
        </div>
        </div>
        </section>

</main>
<!-- Example HTML for listing ordonnances -->



<script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
<script>
    document.getElementById("downloadPdf").addEventListener("click", function () {
        const { jsPDF } = window.jspdf;
        const pdf = new jsPDF();

        // R√©cup√©ration des lignes de donn√©es du tableau HTML
        const rows = document.querySelectorAll("#ordonnanceTable tbody tr");

        // Parcours des lignes pour cr√©er chaque ordonnance
        rows.forEach((row, index) => {
            if (index > 0) {
                pdf.addPage(); // Nouvelle page pour chaque ordonnance
            }

            let y = 10;
            const patient = row.cells[0].textContent.trim();
            const dure = row.cells[4].textContent.trim();
            const quantite_utilisation = row.cells[5].textContent.trim();
            const date = row.cells[1].textContent.trim();
            const medications = row.cells[2].textContent.trim();
            const comment = row.cells[3].textContent.trim();

            // Titre de l'ordonnance
            pdf.setFontSize(14);
            pdf.setFont("helvetica", "bold");
            pdf.text("ORDONNANCE", 105, y, null, null, 'center');
            y += 10;

            // Informations sur le patient et le m√©decin
            pdf.setFontSize(12);
            pdf.setFont("helvetica", "normal");
            pdf.text(`ID: ${patient}`, 10, y);
            y += 8;
            pdf.text(`Medicaments: ${medications}`, 10, y);
            y += 8;
            pdf.text(`Date: ${date}`, 10, y);
            y += 8;
            pdf.text(`Duree: ${dure}`, 10, y);
            y += 8;
            pdf.text(`Quantite d'utilisation: ${quantite_utilisation}`, 10, y);
            y += 15;
            pdf.text(`Commentaire: ${comment}`, 10, y);
            y += 8;
            // M√©dicaments prescrits
            pdf.setFont("helvetica", "bold");
            pdf.text("M√©dicaments:", 10, y);
            y += 8;

            const medsList = medications.split("<br>").map(med => med.trim());
            medsList.forEach(med => {
                pdf.setFont("helvetica", "normal");
                pdf.text(med, 10, y);
                y += 8;
            });

            y += 10;

            // Commentaire
            pdf.setFont("helvetica", "italic");
            pdf.text(`Commentaire: ${comment}`, 10, y);

            // Ajouter une ligne de s√©paration en bas de la page
            y += 15;
            pdf.setLineWidth(0.5);
            pdf.line(10, y, 200, y);  // Ligne horizontale
        });

        pdf.save("ordonnances.pdf");
    });
</script>


<script>
    document.addEventListener("DOMContentLoaded", function() {
        function checkExpiredOrdonnances() {
            let now = new Date();
            document.querySelectorAll("tr[data-date]").forEach(row => {
                let dateStr = row.getAttribute("data-date");
                if (dateStr) {
                    let ordonnanceDate = new Date(dateStr); // 'ordonnanceDate' pour plus de clart√©
                    if (ordonnanceDate < now) {
                        row.style.display = "none"; // Cache la ligne expir√©e
                    }
                }
            });
        }

        checkExpiredOrdonnances();
        setInterval(checkExpiredOrdonnances, 60000); // V√©rification toutes les minutes
    });
</script>





{% endblock %}
